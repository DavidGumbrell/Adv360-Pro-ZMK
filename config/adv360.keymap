




/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
//
// QWERTY LAYOUT Key Legends:
//		0			1					2				3				4				5					6							7					8			9			10			11			12					13						14					15				16				17				18				19
//	A	EQUAL		N1					N2				N3				N4				N5					KP																													Mod						N6					N7				N8				N9				N0				MINUS
//	B	TAB			Q					W				E				R				T					Mod 1																												Mod3					Y					U				I				O				P				BSLH
//	C	ESC			A					S				D				F				G					Mod 2						LCTRL				LALT								LGUI		RCTRL				Mod4					H					J				K				L				SEMI			SQT
//	D	LSHFT		Z					X				C				V				B					&none						&none				HOME		&none		&none		PG_UP		&none				&none					N					M				COMMA			DOT				FSLH			RSHFT
//	E	FN			GRAVE				CAPS			LEFT			RIGHT			BKSP				DEL												END									PG_DN		ENTER				SPACE										UP				DOWN			LBKT			RBKT			FN
//
// QWERTY Layout Key Maps
//		0			1					2				3				4				5					6							7					8			9			10			11			12					13						14					15				16				17				18				19
//		&kp EQUAL	&kp N1				&kp N2			&kp N3			&kp N4			&kp N5				&tog 1																												&mo 3					&kp N6				&kp N7			&kp N8			&kp N9			&kp N0			&kp MINUS
//		&kp TAB 	&kp Q				&kp W			&kp E			&kp R			&kp T				&none																												&none					&kp Y				&kp U			&kp I			&kp O			&kp P			&kp BSLH
//		&kp ESC		&kp A				&kp S			&kp D			&kp F			&kp G				&none						&kp LCTRL			&kp LALT							&kp LGUI		&kp RCTRL		&none					&kp H				&kp J			&kp K			&kp L			&kp SEMI		&kp SQT
//		&kp LSHFT	&kp Z				&kp X			&kp C			&kp V			&kp B				&none						&none				&kp HOME	&none		&none		&kp PG_UP		&none			&none					&kp N				&kp M			&kp COMMA		&kp DOT			&kp FSLH		&kp RSHFT
//		&mo 2		&kp GRAVE			&kp CAPS 		&kp LEFT		&kp RIGHT		&kp BSPC			&kp DEL											&kp END								&kp PG_DN		&kp ENTER		&kp SPACE									&kp UP			&kp DOWN		&kp LBKT		&kp RBKT		&mo 2

//		0			1					2				3				4				5					6							7					8			9			10			11			12					13						14					15				16				17				18				19
            bindings = <
		// Dvorkak Binding
		&kp EQUAL	&kp N1				&kp N2			&kp N3			&kp N4			&kp N5				&tog 1																												&mo 3					&kp N6				&kp N7			&kp N8			&kp N9			&kp N0		&kp MINUS
		&kp ESC  	&kp SINGLE_QUOTE	&kp COMMA		&kp DOT			&kp P			&kp Y				&mo 5																												&mo 5					&kp F				&kp G			&kp C			&kp R			&kp L		&kp FSLH
		&kp TAB		&kp A				&kp O			&kp E			&kp U			&kp I				&none						&kp LEFT_CONTROL	&kp LALT							&kp LGUI	&kp RCTRL			&none					&kp D				&kp H			&kp T			&kp N			&kp S		&kp SQT
		&kp LSHFT	&kp SEMICOLON		&kp Q			&kp J			&kp K			&kp X				&none						&none				&kp HOME	&none		&none		&kp PG_UP	&none				&none					&kp B				&kp M			&kp W			&kp V			&kp Z		&kp RSHFT
		&mo 2		&kp NON_US_BSLH		&kp GRAVE		&kp LEFT		&kp RIGHT		&kp BSPC			&kp DEL											&kp END								&kp PG_DN	&kp ENTER			&kp SPACE									&kp UP			&kp DOWN		&kp LBKT		&kp RBKT		&mo 2
            >;
        };

        layer_keypad {
//		0			1					2				3				4				5					6							7					8			9			10			11			12					13						14					15				16				17				18					19
            bindings = <
		&kp EQUAL	&kp N1				&kp N2			&kp N3			&kp N4			&kp N5				&trans																												&mo 3					&kp N6				&kp KP_NUM		&kp KP_EQUAL	&kp KP_DIVIDE	&kp KP_MULTIPLY		&kp MINUS
		&kp TAB		&kp Q				&kp W			&kp E			&kp R			&kp T				&none																												&none					&kp Y				&kp KP_N7		&kp KP_N8		&kp KP_N9		&kp KP_MINUS		&kp BSLH
		&kp ESC		&kp A				&kp S			&kp D			&kp F			&kp G				&none						&kp LCTRL			&kp LALT							&kp LGUI	&kp RCTRL			&none					&kp H				&kp KP_N4		&kp KP_N5		&kp KP_N6		&kp KP_PLUS			&kp SQT
		&kp LSHFT	&kp Z				&kp X			&kp C			&kp V			&kp B				&none						&none				&kp HOME	&none		&none		&kp PG_UP	&none				&none					&kp N				&kp KP_N1		&kp KP_N2		&kp KP_N3		&kp KP_ENTER		&kp RSHFT
		&mo 2		&kp GRAVE			&kp CAPS		&kp LEFT		&kp RIGHT		&kp BSPC			&kp DEL											&kp END								&kp PG_DN	&kp ENTER			&kp KP_N0									&kp UP			&kp DOWN		&kp KP_DOT		&kp RBKT			&mo 2
            >;
        };

        layer_fn {
//		0			1					2				3				4				5					6							7					8			9			10			11			12					13						14					15				16				17				18				19
            bindings = <
		&kp F1		&kp F2				&kp F3			&kp F4			&kp F5			&kp F6				&tog 1																												&mo 3					&kp F7				&kp F8			&kp F9			&kp F10			&kp F11			&kp F12
		&trans		&trans				&trans			&trans			&trans			&trans				&none																												&none					&trans				&trans			&trans			&trans			&trans			&trans
		&trans		&trans				&trans			&trans			&trans			&trans				&none						&trans				&trans								&trans		&trans				&none					&trans				&trans			&trans			&trans			&trans			&trans
		&trans		&trans				&trans			&trans			&trans			&trans				&none						&none				&trans		&none		&none		&trans		&none				&none					&trans				&trans			&trans			&trans			&trans			&trans
		&trans		&trans				&trans			&trans			&trans			&trans				&trans											&trans								&trans		&trans				&trans										&trans			&trans			&trans			&trans			&trans
            >;
        };

        layer_mod {
//		0			1					2				3				4				5					6							7					8			9			10			11			12					13						14					15				16				17				18				19
            bindings = <
		&none		&bt BT_SEL 0		&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&bt BT_SEL 4		&none																												&trans					&bt BT_SEL 0		&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&bt BT_SEL 4	&none
		&none		&none				&none			&none			&none			&out OUT_TOG		&bootloader																											&bootloader				&none				&none			&none			&none			&none			&none
		&none		&none				&none			&none			&out OUT_USB	&none				&rgb_ug RGB_MEFS_CMD 5		&bt BT_CLR			&none								&bt BT_CLR	&bt BT_CLR			&rgb_ug RGB_MEFS_CMD 5	&none				&none			&none			&none			&none			&none
		&none		&none				&none			&none			&none			&none				&none						&none				&none		&none		&none		&none		&none				&none					&out OUT_BLE		&tog 4			&tog 4			&none			&none			&none
		&none		&none				&none			&bl BL_INC		&bl BL_DEC		&rgb_ug RGB_TOG		&bl BL_TOG										&none								&none		&bl BL_TOG			&rgb_ug RGB_TOG								&bl BL_INC		&bl BL_DEC		&none			&none			&none
            >;
        };

        layer_Mac_Controls {
//		0			1					2				3				4				5					6							7					8			9			10			11			12					13						14					15				16				17				18				19
            bindings = <
		&trans		&trans				&trans			&trans			&trans			&trans				&trans																												&trans					&trans				&trans			&trans			&trans			&trans			&trans
		&trans		&trans				&trans			&trans			&trans			&trans				&trans																												&trans					&trans				&trans			&trans			&trans			&trans			&trans
		&trans		&trans				&trans			&trans			&trans			&trans				&trans						&kp LEFT_GUI		&kp LEFT_ALT						&kp RCTRL	&kp RGUI			&trans					&trans				&trans			&trans			&trans			&trans			&trans
		&trans		&trans				&trans			&trans			&trans			&trans				&trans						&trans				&trans		&trans		&trans		&trans		&trans				&trans					&trans				&trans			&trans			&trans			&trans			&trans
		&trans		&trans				&trans			&trans			&trans			&trans				&trans											&trans								&trans		&trans				&trans										&trans			&trans			&trans			&trans			&trans
            >;
        };

        layer_Symbols {
//		0			1					2				3				4				5					6							7					8			9			10			11			12					13						14					15				16				17				18				19
            bindings = <
		&trans		&trans				&trans			&trans			&trans			&trans				&trans																												&trans					&trans				&trans			&trans			&trans			&trans			&trans
		&trans		&kp NUBS			&kp LT			&kp GT			&kp PLUS		&kp LEFT_BRACKET	&trans																												&trans					&kp RBKT			&kp AMPERSAND	&kp COLON		&kp DOLLAR		&kp LS(NUBS)	&trans
		&trans		&kp CARET			&kp ASTERISK	&kp EXCL		&kp EQUAL		&kp LPAR			&trans						&trans				&trans								&trans		&trans				&trans					&kp RPAR			&kp LS(N2)		&kp STAR		&kp GRAVE		&kp BACKSLASH	&trans
		&trans		&kp TILDE 			&kp SQT			&kp PERCENT		&kp MINUS		&kp LEFT_BRACE		&trans						&trans				&trans		&trans		&trans		&trans		&trans				&trans					&kp RBRC			&kp QMARK		&kp LS(SQT)		&kp PIPE		&trans			&trans
		&trans		&trans				&trans			&trans			&trans			&trans				&trans											&trans								&trans		&trans				&trans										&trans			&trans			&trans			&trans			&trans
            >;
        };

    };
};
